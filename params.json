{
  "name": "node-nltk-stopwords",
  "tagline": "A node module exposing nltk stopwords corpora and provide utility functions for removing stopwords",
  "body": "# node-nltk-stopwords\r\nA node module exposing nltk stopwords corpora and provide utility functions for removing stopwords\r\n\r\n## Usage\r\n```bash\r\nnpm install --save nltk-stopwords\r\n```\r\n\r\n```javascript\r\nvar stopwords = require('nltk-stopwords')\r\n\r\n// let's load english stopwords\r\nvar english = stopwords.load('english')\r\n\r\n// Remove stopwords from a sentence\r\nstopwords.remove(\"A sentence can not be without stopwords\", english)\r\n// This should output\r\n// 'A sentence without stopwords'\r\n\r\n// You can also pass a string of language in the second parameter, `stopwords.remove` will handle stopword loading.\r\nstopwords.remove(\"J'essaye de trouver un bon example\", \"french\")\r\n// This should output\r\n// \"J'essaye trouver bon example\"\r\n```\r\n\r\n\r\nBy default, the sentence is tokenized by whitespace. You can also pass an array of tokenized string instead.\r\n\r\n```javascript\r\nstopwords.remove([ 'A', 'sentence', 'can', 'not', 'be', 'without', 'stopwords' ], english)\r\n// This should output \r\n// [ 'A', 'sentence', 'without', 'stopwords' ]\r\n\r\n```\r\n\r\nIf a string input is passed, `stopwords.remove` will return a string, if an array input is passed instead, the resulting return value will also be an array.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}